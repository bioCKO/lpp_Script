{
    "version": "1.0.0",
    "driver": {
        "serialization": "json",
        "exe": "python -m pbfalcon.cli.task_gen_config --resolved-tool-contract ",
        "env": {}
    },
    "tool_contract_id": "falcon_ns.tasks.task_falcon_gen_config",
    "tool_contract": {
        "task_type": "pbsmrtpipe.task_types.standard",
        "resource_types": [],
        "description": "Generate FALCON cfg from pbcommand options.",
        "schema_options": [
            {
                "pb_option": {
                    "default": "5000000",
                    "type": "string",
                    "option_id": "falcon_ns.task_options.HGAP_GenomeLength_str",
                    "name": "Genome length",
                    "description": "Approx. number of base pairs expected in the genome. We choose many hidden settings automatically, based on this. (To learn what we generate, see fc_*.cfg, currently called 'falcon_ns.tasks.task_falcon0_build_rdb-PacBio.FileTypes.txt' amongst output files.)"
                },
                "title": "JSON Schema for falcon_ns.task_options.HGAP_GenomeLength_str",
                "required": [
                    "falcon_ns.task_options.HGAP_GenomeLength_str"
                ],
                "$schema": "http://json-schema.org/draft-04/schema#",
                "type": "object",
                "properties": {
                    "falcon_ns.task_options.HGAP_GenomeLength_str": {
                        "default": "5000000",
                        "type": "string",
                        "description": "Approx. number of base pairs expected in the genome. We choose many hidden settings automatically, based on this. (To learn what we generate, see fc_*.cfg, currently called 'falcon_ns.tasks.task_falcon0_build_rdb-PacBio.FileTypes.txt' amongst output files.)",
                        "title": "Genome length"
                    }
                }
            },
            {
                "pb_option": {
                    "default": "30",
                    "type": "string",
                    "option_id": "falcon_ns.task_options.HGAP_SeedCoverage_str",
                    "name": "Seed coverage",
                    "description": "A target for the total # of bases in the 'raw' (post primary) reads, divided by the total number in the 'seed' reads."
                },
                "title": "JSON Schema for falcon_ns.task_options.HGAP_SeedCoverage_str",
                "required": [
                    "falcon_ns.task_options.HGAP_SeedCoverage_str"
                ],
                "$schema": "http://json-schema.org/draft-04/schema#",
                "type": "object",
                "properties": {
                    "falcon_ns.task_options.HGAP_SeedCoverage_str": {
                        "default": "30",
                        "type": "string",
                        "description": "A target for the total # of bases in the 'raw' (post primary) reads, divided by the total number in the 'seed' reads.",
                        "title": "Seed coverage"
                    }
                }
            },
            {
                "pb_option": {
                    "default": "-1",
                    "type": "string",
                    "option_id": "falcon_ns.task_options.HGAP_SeedLengthCutoff_str",
                    "name": "Seed length cutoff",
                    "description": "Only reads as long as this will be used as 'seeds' for the draft assembly. (Shorter reads will be used for correction and polishing, if they pass the dataset filters.) If '-1', then this will be calculated automatically, such that the total number of seed bases nearly equals GenomeLength*SeedCoverage."
                },
                "title": "JSON Schema for falcon_ns.task_options.HGAP_SeedLengthCutoff_str",
                "required": [
                    "falcon_ns.task_options.HGAP_SeedLengthCutoff_str"
                ],
                "$schema": "http://json-schema.org/draft-04/schema#",
                "type": "object",
                "properties": {
                    "falcon_ns.task_options.HGAP_SeedLengthCutoff_str": {
                        "default": "-1",
                        "type": "string",
                        "description": "Only reads as long as this will be used as 'seeds' for the draft assembly. (Shorter reads will be used for correction and polishing, if they pass the dataset filters.) If '-1', then this will be calculated automatically, such that the total number of seed bases nearly equals GenomeLength*SeedCoverage.",
                        "title": "Seed length cutoff"
                    }
                }
            },
            {
                "pb_option": {
                    "default": "",
                    "type": "string",
                    "option_id": "falcon_ns.task_options.HGAP_FalconAdvanced_str",
                    "name": "FALCON cfg overrides",
                    "description": "This is intended to allow support engineers to override the cfg which we will generate from other options. It is a semicolon-separated list of key=val pairs. Newlines are allowed but ignored. For more details on the available options, see https://github.com/PacificBiosciences/FALCON/wiki/Manual"
                },
                "title": "JSON Schema for falcon_ns.task_options.HGAP_FalconAdvanced_str",
                "required": [
                    "falcon_ns.task_options.HGAP_FalconAdvanced_str"
                ],
                "$schema": "http://json-schema.org/draft-04/schema#",
                "type": "object",
                "properties": {
                    "falcon_ns.task_options.HGAP_FalconAdvanced_str": {
                        "default": "",
                        "type": "string",
                        "description": "This is intended to allow support engineers to override the cfg which we will generate from other options. It is a semicolon-separated list of key=val pairs. Newlines are allowed but ignored. For more details on the available options, see https://github.com/PacificBiosciences/FALCON/wiki/Manual",
                        "title": "FALCON cfg overrides"
                    }
                }
            },
            {
                "pb_option": {
                    "default": false,
                    "type": "boolean",
                    "option_id": "falcon_ns.task_options.HGAP_AggressiveAsm_bool",
                    "name": "Aggressive option",
                    "description": "Greedy option for LA4Falcon. For more details on the available options, see https://github.com/PacificBiosciences/FALCON/wiki/Manual"
                },
                "title": "JSON Schema for falcon_ns.task_options.HGAP_AggressiveAsm_bool",
                "required": [
                    "falcon_ns.task_options.HGAP_AggressiveAsm_bool"
                ],
                "$schema": "http://json-schema.org/draft-04/schema#",
                "type": "object",
                "properties": {
                    "falcon_ns.task_options.HGAP_AggressiveAsm_bool": {
                        "default": false,
                        "type": "boolean",
                        "description": "Greedy option for LA4Falcon. For more details on the available options, see https://github.com/PacificBiosciences/FALCON/wiki/Manual",
                        "title": "Aggressive option"
                    }
                }
            }
        ],
        "output_types": [
            {
                "title": "INI File",
                "description": "FALCON cfg (aka 'ini')",
                "default_name": "fc_run",
                "id": "cfg_out",
                "file_type_id": "PacBio.FileTypes.cfg"
            }
        ],
        "_comment": "Created by v0.4.14",
        "name": "Tool FalconConfigGenerator",
        "input_types": [
            {
                "description": "FOFN for fasta files",
                "title": "FileOfFileNames",
                "id": "fofn_in",
                "file_type_id": "PacBio.FileTypes.generic_fofn"
            }
        ],
        "nproc": 1,
        "is_distributed": false,
        "tool_contract_id": "falcon_ns.tasks.task_falcon_gen_config"
    }
}
