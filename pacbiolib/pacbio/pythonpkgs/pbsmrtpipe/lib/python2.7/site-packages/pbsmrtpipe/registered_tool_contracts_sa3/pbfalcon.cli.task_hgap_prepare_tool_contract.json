{
    "version": "1.0.0",
    "driver": {
        "serialization": "json",
        "exe": "python -m pbfalcon.cli.task_hgap_prepare --resolved-tool-contract ",
        "env": {}
    },
    "tool_contract_id": "falcon_ns.tasks.task_hgap_prepare",
    "tool_contract": {
        "task_type": "pbsmrtpipe.task_types.standard",
        "resource_types": [],
        "description": "XXX Experimental HGAP.5",
        "schema_options": [
            {
                "pb_option": {
                    "default": "5000000",
                    "type": "string",
                    "option_id": "falcon_ns.task_options.HGAP_GenomeLength_str",
                    "name": "Genome length",
                    "description": "Approx. number of base pairs expected in the genome. We choose many hidden settings automatically, based on this. (To learn what we generate, see fc_*.cfg, currently called 'falcon_ns.tasks.task_falcon0_build_rdb-PacBio.FileTypes.txt' amongst output files.)"
                },
                "title": "JSON Schema for falcon_ns.task_options.HGAP_GenomeLength_str",
                "required": [
                    "falcon_ns.task_options.HGAP_GenomeLength_str"
                ],
                "$schema": "http://json-schema.org/draft-04/schema#",
                "type": "object",
                "properties": {
                    "falcon_ns.task_options.HGAP_GenomeLength_str": {
                        "default": "5000000",
                        "type": "string",
                        "description": "Approx. number of base pairs expected in the genome. We choose many hidden settings automatically, based on this. (To learn what we generate, see fc_*.cfg, currently called 'falcon_ns.tasks.task_falcon0_build_rdb-PacBio.FileTypes.txt' amongst output files.)",
                        "title": "Genome length"
                    }
                }
            },
            {
                "pb_option": {
                    "default": "30",
                    "type": "string",
                    "option_id": "falcon_ns.task_options.HGAP_SeedCoverage_str",
                    "name": "Seed coverage",
                    "description": "A target for the total # of bases in the 'raw' (post primary) reads, divided by the total number in the 'seed' reads."
                },
                "title": "JSON Schema for falcon_ns.task_options.HGAP_SeedCoverage_str",
                "required": [
                    "falcon_ns.task_options.HGAP_SeedCoverage_str"
                ],
                "$schema": "http://json-schema.org/draft-04/schema#",
                "type": "object",
                "properties": {
                    "falcon_ns.task_options.HGAP_SeedCoverage_str": {
                        "default": "30",
                        "type": "string",
                        "description": "A target for the total # of bases in the 'raw' (post primary) reads, divided by the total number in the 'seed' reads.",
                        "title": "Seed coverage"
                    }
                }
            },
            {
                "pb_option": {
                    "default": "-1",
                    "type": "string",
                    "option_id": "falcon_ns.task_options.HGAP_SeedLengthCutoff_str",
                    "name": "Seed length cutoff",
                    "description": "Only reads as long as this will be used as 'seeds' for the draft assembly. (Shorter reads will be used for correction and polishing, if they pass the dataset filters.) If '-1', then this will be calculated automatically, such that the total number of seed bases nearly equals GenomeLength*SeedCoverage."
                },
                "title": "JSON Schema for falcon_ns.task_options.HGAP_SeedLengthCutoff_str",
                "required": [
                    "falcon_ns.task_options.HGAP_SeedLengthCutoff_str"
                ],
                "$schema": "http://json-schema.org/draft-04/schema#",
                "type": "object",
                "properties": {
                    "falcon_ns.task_options.HGAP_SeedLengthCutoff_str": {
                        "default": "-1",
                        "type": "string",
                        "description": "Only reads as long as this will be used as 'seeds' for the draft assembly. (Shorter reads will be used for correction and polishing, if they pass the dataset filters.) If '-1', then this will be calculated automatically, such that the total number of seed bases nearly equals GenomeLength*SeedCoverage.",
                        "title": "Seed length cutoff"
                    }
                }
            },
            {
                "pb_option": {
                    "default": "{\n    \"~for_now_see\": \"https://github.com/PacificBiosciences/ExperimentalPipelineOptionsDocs/blob/master/HGAP/defaults.md\"\n}\n",
                    "type": "string",
                    "option_id": "falcon_ns.task_options.HGAP_Options_JSON",
                    "name": "Experimental HGAP.5 config overrides.",
                    "description": "Experimental HGAP.5 config overrides are experimental."
                },
                "title": "JSON Schema for falcon_ns.task_options.HGAP_Options_JSON",
                "required": [
                    "falcon_ns.task_options.HGAP_Options_JSON"
                ],
                "$schema": "http://json-schema.org/draft-04/schema#",
                "type": "object",
                "properties": {
                    "falcon_ns.task_options.HGAP_Options_JSON": {
                        "default": "{\n    \"~for_now_see\": \"https://github.com/PacificBiosciences/ExperimentalPipelineOptionsDocs/blob/master/HGAP/defaults.md\"\n}\n",
                        "type": "string",
                        "description": "Experimental HGAP.5 config overrides are experimental.",
                        "title": "Experimental HGAP.5 config overrides."
                    }
                }
            }
        ],
        "output_types": [
            {
                "title": "HGAP JSON file",
                "description": "Output: Actual configuration to be used by HGAP, in a 2-level dictionary.",
                "default_name": "hgap-cfg",
                "id": "hgap-cfg-out",
                "file_type_id": "PacBio.FileTypes.json"
            },
            {
                "title": "Python logging.config JSON file",
                "description": "Output: Standard Python logging.config (for the task, not pbsmrtpipe)",
                "default_name": "logging-cfg",
                "id": "logging-cfg-out",
                "file_type_id": "PacBio.FileTypes.json"
            },
            {
                "title": "Log-file from Python logger",
                "description": "Output: log-file",
                "default_name": "out1",
                "id": "out",
                "file_type_id": "PacBio.FileTypes.log"
            }
        ],
        "_comment": "Created by v0.4.14",
        "name": "XXX Experimental HgapConfigGenerator",
        "input_types": [
            {
                "description": "Input: Probably BAM files",
                "title": "DataSet-SubreadSet",
                "id": "subreads-in",
                "file_type_id": "PacBio.DataSet.SubreadSet"
            }
        ],
        "nproc": "$max_nproc",
        "is_distributed": true,
        "tool_contract_id": "falcon_ns.tasks.task_hgap_prepare"
    }
}
