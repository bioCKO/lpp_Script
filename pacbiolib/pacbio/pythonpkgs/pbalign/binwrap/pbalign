#!/bin/bash

# ---- error handling
set -o errexit;
set -o posix;
set -o pipefail;
set -o errtrace;
unexpected_error() {
    local errstat=$?
    echo "${g_prog:-$(basename $0)}: Error! Encountered unexpected error at 'line $(caller)', bailing out..." 1>&2
    exit $errstat;
}
trap unexpected_error ERR;

# Force the path to only what we need, saving off the original path
# PATH_ORIG=$PATH;
# PATH=/usr/bin:/bin

g_prog=$(basename "$0");
g_progdir=$(dirname "$0");
g_progdir_abs=$(dirname $(readlink -f "$0"));

__SMRTPRIVATE_BAMTOOLS_EXEPATH="$g_progdir_abs/../../../../../private/thirdparty/bamtools/bamtools_2.4.0+pbi86/binwrap/bamtools" \
__SMRTPRIVATE_BLASR_EXEPATH="$g_progdir_abs/../../../../../private/pacbio/blasr/binwrap/blasr" \
    exec "${g_progdir_abs}/../../../../../private/thirdparty/python/python_2.7.9/binwrap/python" "${g_progdir_abs}/../../../../../private/pacbio/pythonpkgs/pbalign/bin/pbalign" ${1+"$@"}
